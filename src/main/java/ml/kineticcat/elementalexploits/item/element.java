package ml.kineticcat.elementalexploits.item;

import net.fabricmc.fabric.api.item.v1.FabricItemSettings;
import net.minecraft.item.Item;
import ml.kineticcat.elementalexploits.*;

public class element extends Item{

    public element(Settings settings) {
        super(settings);
    }

    public static final element[] ELEMENT = {
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS)),
        new element(new FabricItemSettings().group(elementalexploits.ELEMENTS))
    };

//    static Boolean isin(String[] list, String test) {
//        for (int j = 0;j<list.length;j++) {
//            if (list[j] == test) {
//                return Boolean.TRUE;
//            } else {
//                return Boolean.FALSE;
//            }
//        }
//        return null;
//    }

//    public static int getElement(ItemStack stack) {
//        NbtCompound nbtCompound = stack.getNbt();
//        int i;
//        try {
//            i = Integer.parseInt(nbtCompound.get("Element").toString().replaceAll("\"", ""));
//        } catch (Exception e) {
//            i = 0;
//        }
//
//        if (i >= 0 && i <= 118) {
//            stack.setCustomName(Text.literal("§r" + info.names[i]));
//        } else {
//            stack.setCustomName(Text.literal("Element Number Out of bounds 0 - 118 !"));
//        }
//        System.out.println(i);
//        System.out.println(info.names[i]);
////        return nbtCompound != null ? nbtCompound.getList("Element", 10) : new NbtList();
//        try{return nbtCompound.get("Element") != null ? Integer.parseInt(nbtCompound.get("Element").toString().replaceAll("\"", "")) : 0;}catch(Exception e){return 0;}
//    }

}
